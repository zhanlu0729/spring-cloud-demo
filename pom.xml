<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.spring.cloud.msc</groupId>
    <artifactId>spring-cloud-msc-parent</artifactId>
    <version>0.0.1</version>
    <packaging>pom</packaging>
    <name>spring-cloud-msc-parent</name>
    <description>spring-cloud-msc-parent</description>
    <url>http://bone.banksteel.com</url>

    <properties>
        <!-- 公共属性定义 start -->
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- 公共属性定义 end -->

        <!-- Spring框架版本定义 start -->
        <spring-boot.version>2.0.6.RELEASE</spring-boot.version>
        <spring-cloud.version>Finchley.SR2</spring-cloud.version>
        <!-- Spring框架版本定义 end -->

        <!-- Apache commons版本定义 start -->
        <commons-io.version>2.6</commons-io.version>
        <commons-beanutils.version>1.9.3</commons-beanutils.version>
        <commons-fileupload.version>1.3.3</commons-fileupload.version>
        <commons-collections4.version>4.1</commons-collections4.version>
        <commons-compress.version>1.18</commons-compress.version>
        <commons-math3.version>3.6.1</commons-math3.version>
        <!-- Apache commons版本定义 end -->

        <!-- 第三方框架版本定义 start -->
        <mybatis-spring-boot.version>1.3.2</mybatis-spring-boot.version>
        <okhttp3.version>3.9.1</okhttp3.version>
        <netty.version>4.1.33.Final</netty.version>
        <quartz.version>2.2.3</quartz.version>
        <alibaba-fastjson.version>1.2.49</alibaba-fastjson.version>
        <alibaba-druid.version>1.1.14</alibaba-druid.version>
        <google-guava.version>27.0.1-jre</google-guava.version>
        <pagehelper-spring-boot.version>1.2.10</pagehelper-spring-boot.version>
        <!-- 第三方框架版本定义 end -->

        <!-- Maven插件的版本及属性定义 start -->
        <maven-toolchains-plugin.phase>none</maven-toolchains-plugin.phase>
        <maven-toolchains-plugin.version>1.1</maven-toolchains-plugin.version>
        <maven-compiler-plugin.version>3.7.0</maven-compiler-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <maven-deploy-plugin.skip>false</maven-deploy-plugin.skip>
        <maven-release-plugin.version>2.5</maven-release-plugin.version>
        <maven-source-plugin.version>3.0.1</maven-source-plugin.version>
        <maven-javadoc-plugin.version>3.0.1</maven-javadoc-plugin.version>
        <!-- Maven插件的版本及属性定义 end -->

    </properties>

    <pluginRepositories>
        <pluginRepository>
            <id>banksteel.repo.plugin</id>
            <layout>default</layout>
            <url>http://code.banksteel.com/mvn/content/groups/banksteel</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <releases>
                <updatePolicy>never</updatePolicy>
            </releases>
        </pluginRepository>
    </pluginRepositories>

    <dependencyManagement>
        <dependencies>
            <!-- 在不用继承父POM的情况使用SpringBoot start -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- 引入spring cloud的依赖，不能少，主要用来管理Spring Cloud生态各组件的版本 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId> org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot.version}</version>
            </dependency>

            <!-- Apache commons start -->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>${commons-fileupload.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons-collections4.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>${commons-compress.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-math3</artifactId>
                <version>${commons-math3.version}</version>
            </dependency>
            <!-- Apache commons end -->

            <!-- 第三方框架 start -->
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp3.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz</artifactId>
                <version>${quartz.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${alibaba-fastjson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${alibaba-druid.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${google-guava.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper-spring-boot.version}</version>
            </dependency>
            <!-- 第三方框架 end -->
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
        </dependency>
    </dependencies>

    <build>
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-webdav-jackrabbit</artifactId>
                <version>2.4</version>
            </extension>
        </extensions>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <pluginManagement>
            <plugins>
                <!-- 添加spring-boot的maven插件，不能少，打jar包时得用 -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <configuration>
                        <mainClass>com.spring.cloud.boot.Main</mainClass>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- 指定maven编译的jdk版本,如果不指定,maven3默认用jdk 1.5 maven2默认用jdk1.3 --> 
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
                <!-- 发布jar到私有库，会用到maven-deploy插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                    <configuration>
                        <skip>${maven-deploy-plugin.skip}</skip>
                    </configuration>
                </plugin>
                <!-- 
                  Release插件是Apache Maven团队提供的官方插件，最终版本是2015-10-17发布的2.5.3，能够为项目代码库打tag，并将项目代码库中的代码发布到SCM的新版本
                  1. 使用Release插件的前提条件
                  1) 明确使用的maven-release-plugin版本，当前为2.5
                  2) 在POM中配置scm的developerConnection
                -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${maven-release-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
            </plugin>
            <!-- 
              maven-toolchains-plugin插件用于指定本次运行使用指定的jdk版本.
              maven-toolchains-plugin插件运行的时候会读取toolchains.xml文件，然后找到文件中匹配的jdk版本，同时设置本次MavenSession使用该jdk版本，
              如此配置之后，当运行其他可以识别toolchain的插件之后就会使用该特定版本的jdk了 
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-toolchains-plugin</artifactId>
                <version>${maven-toolchains-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>${maven-toolchains-plugin.phase}</phase>
                        <goals>
                            <goal>toolchain</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <toolchains>
                        <jdk>
                            <version>${java.version}</version>
                            <vendor>sun</vendor>
                        </jdk>
                    </toolchains>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <scm>
        <url>http://code.banksteel.com/svn/base/parent/tags/1.1.1</url>
        <connection>scm:svn:http://code.banksteel.com/svn/base/parent/tags/1.1.1</connection>
    </scm>

</project>
